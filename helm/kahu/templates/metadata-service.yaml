apiVersion: v1
kind: ServiceAccount
metadata:
  name: kahu-metadata-service-sa
  namespace: {{ .Values.global.namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: kahu-metadata-service
  name: metadata-service-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: metadata-service-role
subjects:
  - kind: ServiceAccount
    name: kahu-metadata-service-sa
    namespace: {{ .Values.global.namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: kahu-metadata-service
  name: metadata-service-role
rules:
  - apiGroups: ["kahu.io"]
    resources: ["providers", "providers/status"]
    verbs: ["create", "delete", "watch", "update", "get", "watch", "list"]
  - apiGroups: [ "*" ]
    resources: ["*"]
    verbs: ["get", "list"]

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kahu-metadata-service
  namespace: {{ .Values.global.namespace }}
spec:
  replicas: {{ .Values.metadataService.replicaCount }}
  selector:
    matchLabels:
      app: kahu-metadata-service
  template:
    metadata:
      labels:
        app: kahu-metadata-service
    spec:
      serviceAccountName: kahu-metadata-service-sa
      containers:
      - image: {{ .Values.images.nfsProvider }}
        imagePullPolicy: {{ .Values.global.image.pullpolicy }}
        name: nfs-provider
        command: ["/usr/local/bin/nfsprovider"]
        args:
        - "-d"
        - "/data"
        volumeMounts:
          # name must match the volume name below
        - name: nfs
          mountPath: "/data"
        - name: socket
          mountPath: "/tmp"
      - image: {{ .Values.images.metadataService }}
        imagePullPolicy: {{ .Values.global.image.pullpolicy }}
        name: metadata-service
        command: ["/usr/local/bin/metaservice"]
        args:
        - "-p"
        - "{{ .Values.metadataService.grpcPort }}"
        - "-a"
        - "0.0.0.0"
        ports:
        - name: grpc
          containerPort: {{ int .Values.metadataService.grpcPort }}
        volumeMounts:
          # name must match the volume name below
          - name: socket
            mountPath: "/tmp"
      volumes:
      - name: nfs
        persistentVolumeClaim:
          claimName: nfs
      - name: socket
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: kahu-metadata-service
  namespace: {{ .Values.global.namespace }}
  labels:
    app: kahu-metadata-service
spec:
  ports:
    - name: grpc
      port: {{ int .Values.metadataService.grpcPort }}
  selector:
    app: kahu-metadata-service
---

